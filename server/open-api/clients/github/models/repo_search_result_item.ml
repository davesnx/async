(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Repo_search_result_item.t : Repo Search Result Item
 *)

type t = {
  id : int32;
  node_id : string;
  name : string;
  full_name : string;
  owner : Simple_user.t option;
  _private : bool;
  html_url : string;
  description : string option;
  fork : bool;
  url : string;
  created_at : string;
  updated_at : string;
  pushed_at : string;
  homepage : string option;
  size : int32;
  stargazers_count : int32;
  watchers_count : int32;
  language : string option;
  forks_count : int32;
  open_issues_count : int32;
  master_branch : string option; [@default None]
  default_branch : string;
  score : int32;
  forks_url : string;
  keys_url : string;
  collaborators_url : string;
  teams_url : string;
  hooks_url : string;
  issue_events_url : string;
  events_url : string;
  assignees_url : string;
  branches_url : string;
  tags_url : string;
  blobs_url : string;
  git_tags_url : string;
  git_refs_url : string;
  trees_url : string;
  statuses_url : string;
  languages_url : string;
  stargazers_url : string;
  contributors_url : string;
  subscribers_url : string;
  subscription_url : string;
  commits_url : string;
  git_commits_url : string;
  comments_url : string;
  issue_comment_url : string;
  contents_url : string;
  compare_url : string;
  merges_url : string;
  archive_url : string;
  downloads_url : string;
  issues_url : string;
  pulls_url : string;
  milestones_url : string;
  notifications_url : string;
  labels_url : string;
  releases_url : string;
  deployments_url : string;
  git_url : string;
  ssh_url : string;
  clone_url : string;
  svn_url : string;
  forks : int32;
  open_issues : int32;
  watchers : int32;
  topics : string list;
  mirror_url : string option;
  has_issues : bool;
  has_projects : bool;
  has_pages : bool;
  has_wiki : bool;
  has_downloads : bool;
  archived : bool;
  (* Returns whether or not this repository disabled. *)
  disabled : bool;
  license : License_simple.t option;
  permissions : Full_repository_permissions.t option; [@default None]
  text_matches : Yojson.Safe.t list;
  temp_clone_token : string option; [@default None]
  allow_merge_commit : bool option; [@default None]
  allow_squash_merge : bool option; [@default None]
  allow_rebase_merge : bool option; [@default None]
  delete_branch_on_merge : bool option; [@default None]
}
[@@deriving yojson { strict = false }, show]

(** Repo Search Result Item *)
let create (id : int32) (node_id : string) (name : string) (full_name : string)
    (owner : Simple_user.t option) (_private : bool) (html_url : string)
    (description : string option) (fork : bool) (url : string)
    (created_at : string) (updated_at : string) (pushed_at : string)
    (homepage : string option) (size : int32) (stargazers_count : int32)
    (watchers_count : int32) (language : string option) (forks_count : int32)
    (open_issues_count : int32) (default_branch : string) (score : int32)
    (forks_url : string) (keys_url : string) (collaborators_url : string)
    (teams_url : string) (hooks_url : string) (issue_events_url : string)
    (events_url : string) (assignees_url : string) (branches_url : string)
    (tags_url : string) (blobs_url : string) (git_tags_url : string)
    (git_refs_url : string) (trees_url : string) (statuses_url : string)
    (languages_url : string) (stargazers_url : string)
    (contributors_url : string) (subscribers_url : string)
    (subscription_url : string) (commits_url : string)
    (git_commits_url : string) (comments_url : string)
    (issue_comment_url : string) (contents_url : string) (compare_url : string)
    (merges_url : string) (archive_url : string) (downloads_url : string)
    (issues_url : string) (pulls_url : string) (milestones_url : string)
    (notifications_url : string) (labels_url : string) (releases_url : string)
    (deployments_url : string) (git_url : string) (ssh_url : string)
    (clone_url : string) (svn_url : string) (forks : int32)
    (open_issues : int32) (watchers : int32) (mirror_url : string option)
    (has_issues : bool) (has_projects : bool) (has_pages : bool)
    (has_wiki : bool) (has_downloads : bool) (archived : bool) (disabled : bool)
    (license : License_simple.t option) : t =
  {
    id;
    node_id;
    name;
    full_name;
    owner;
    _private;
    html_url;
    description;
    fork;
    url;
    created_at;
    updated_at;
    pushed_at;
    homepage;
    size;
    stargazers_count;
    watchers_count;
    language;
    forks_count;
    open_issues_count;
    master_branch = None;
    default_branch;
    score;
    forks_url;
    keys_url;
    collaborators_url;
    teams_url;
    hooks_url;
    issue_events_url;
    events_url;
    assignees_url;
    branches_url;
    tags_url;
    blobs_url;
    git_tags_url;
    git_refs_url;
    trees_url;
    statuses_url;
    languages_url;
    stargazers_url;
    contributors_url;
    subscribers_url;
    subscription_url;
    commits_url;
    git_commits_url;
    comments_url;
    issue_comment_url;
    contents_url;
    compare_url;
    merges_url;
    archive_url;
    downloads_url;
    issues_url;
    pulls_url;
    milestones_url;
    notifications_url;
    labels_url;
    releases_url;
    deployments_url;
    git_url;
    ssh_url;
    clone_url;
    svn_url;
    forks;
    open_issues;
    watchers;
    topics = [];
    mirror_url;
    has_issues;
    has_projects;
    has_pages;
    has_wiki;
    has_downloads;
    archived;
    disabled;
    license;
    permissions = None;
    text_matches = [];
    temp_clone_token = None;
    allow_merge_commit = None;
    allow_squash_merge = None;
    allow_rebase_merge = None;
    delete_branch_on_merge = None;
  }
